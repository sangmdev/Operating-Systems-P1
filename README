What this program does:
///////////////////////
This project is practice using getopt, perror and fork()
The program will fork off versions of itself to do some file processing. 
The original program will read the first line of the file which tells you how many iterations are required. 
The original program will then fork a child process that will
	-take in the next line telling how many integers to read.
	-Read that many integers, putting them on a stack.
	-Write the child PID into the output file.
	-Write the numbers in reverse order into output file.
	-Terminate
The original program will do this until all child procresses have terminated and then write all the pids of children it launched and its own pid to the output file. 

How to Compile and Run Program:
///////////////////////
-Compile program with make all or make. Clean with make clean.
-To run the program, use ./exec [options], to see options use -h option. If -h option is used, all other options are ignored.
-To run program with your own input or output files do ./exec -i inputFileName -o outputFileName.


Outstanding Problems:
/////////////////////


Problems I encountered:
///////////////////////
-Child kept reading same line from read file. (second and third lines). I think it's because the child processes are running at the same time so they are accessing at the same time, but sleep is not fixing the problem. 1/29/19
	-The parent process now moves the file read down when the child terminates so it is the same spot after child.
-The output is printing the correct numbers but not in the correct format.
	-Was able to fix the problem by removing an extra integer in the input file.
-Previous fix of problem will not be okay, turns out we have to deal with this as an error.
	-Was able to alert the user that number of numbers is incorrect.

